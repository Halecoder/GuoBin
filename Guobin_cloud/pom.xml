<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.hl.travel</groupId>
    <artifactId>Guobin_Cloud</artifactId>
    <version>1.0-SNAPSHOT</version>

    <properties>
        <maven.compiler.source>8</maven.compiler.source>
        <maven.compiler.target>8</maven.compiler.target>
        <java.version>1.8</java.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>

    <!--标识SPring Cloud版本-->
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>Greenwich.SR5</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.1.12.RELEASE</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>

    <dependencies>
    <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter</artifactId>
    </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-autoconfigure</artifactId>
        </dependency>


        <!--mybatis相关的依赖-->
        <dependency>
            <groupId>org.mybatis.spring.boot</groupId>
            <artifactId>mybatis-spring-boot-starter</artifactId>
            <version>2.2.1</version>
        </dependency>

    <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-test</artifactId>
        <scope>test</scope>
    </dependency>





        <!--aop依赖-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-aop</artifactId>
        </dependency>


    </dependencies>



    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>

            <plugin>
                <groupId>org.mybatis.generator</groupId>
                <artifactId>mybatis-generator-maven-plugin</artifactId>
                <version>1.3.7</version>
                <configuration>
                    <verbose>true</verbose>
                    <overwrite>true</overwrite>
                </configuration>
            </plugin>




<!--            <plugin>-->
<!--                <groupId>org.apache.maven.plugins</groupId>-->
<!--                <artifactId>maven-compiler-plugin</artifactId>-->
<!--                <configuration>-->
<!--                    &lt;!&ndash; 必须添加此处配置javadoc才生效，-->
<!--               注：该配置和lombok冲突，存在该配置则导致lombok编译报错 &ndash;&gt;-->
<!--                    <annotationProcessorPaths>-->
<!--                        <path>-->
<!--                            <groupId>com.github.therapi</groupId>-->
<!--                            <artifactId>therapi-runtime-javadoc-scribe</artifactId>-->
<!--                            <version>0.15.0</version>-->
<!--                        </path>-->
<!--                    </annotationProcessorPaths>-->
<!--                </configuration>-->
<!--            </plugin>-->


            <!-- springdoc插件（用于在verify阶段生成openapi.json） -->
            <plugin>
                <groupId>org.springdoc</groupId>
                <artifactId>springdoc-openapi-maven-plugin</artifactId>
                <version>1.3</version>
                <executions>
                    <execution>
                        <id>integration-test</id>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <!-- The local url of your (json or yaml) - 需依赖springdoc-openapi-ui-->
                    <apiDocsUrl>·</apiDocsUrl>
                    <!-- api文件名称 -->
                    <outputFileName>openapi.json</outputFileName>
                    <!-- api文件输出路径（默认${project.build.directory}，即target下） -->
                    <outputDir> ${project.build.directory}</outputDir>
                    <!-- <outputDir>/home/springdoc/maven-output</outputDir> -->
                    <!-- 是否跳过（默认false）-->
                    <skip>false</skip>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <!--springdoc-openapi-maven-plugin插件依赖以下配置 -->
                <configuration>
                    <jvmArguments>-Dspring.application.admin.enabled=true</jvmArguments>
                </configuration>
                <executions>
                    <execution>
                        <id>pre-integration-test</id>
                        <goals>
                            <goal>start</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>post-integration-test</id>
                        <goals>
                            <goal>stop</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>


        </plugins>
    </build>


    <packaging>pom</packaging>
    <modules>
        <module>guobin_common</module>
        <module>guobin_member</module>
        <module>eureka_server</module>
        <module>guobin_core</module>
        <module>guobin_map</module>
        <module>guobin_feign</module>
        <module>zuul_server</module>
        <module>guobin_upload</module>
        <module>guobin_job</module>
        <module>gateway_server</module>
        <module>guobin_oauth</module>
        <module>guobin_role</module>
    </modules>
</project>