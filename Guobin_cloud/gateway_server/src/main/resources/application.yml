server:
  port: 82 # 网关端口
spring:
  application:
    name: gateway-server # 服务名称
  cloud:
    gateway:
      globalcors:
        add-to-simple-url-handler-mapping: true # 解决options请求被拦截问题
        cors-configurations:
          '[/**]':
            allowedOrigins:  # 允许跨域的源
              - "http://localhost:5501"
              - "http://localhost:5500"
            allowedMethods: # 允许跨域的方法
              - "GET"
              - "POST"
              - "DELETE"
              - "PUT"
              - "OPTIONS"
            allowedHeaders: "*" # 允许跨域的头
            allowCredentials: true # 是否允许携带cookie
            maxAge: 360000 # 预检间隔时间
      routes:
        - id: travelItem # 路由的id，没有固定规则但要求唯一，建议配合服务名
          uri: lb://guobin-core # 匹配后提供服务的路由地址 lb://表示从注册中心获取服务
          predicates: # 断言，路径相匹配的进行路由
            - Path=/travelItem/*.do # 断言，路径相匹配的进行路由
          filters: # 过滤器，可以对请求和响应进行处理
            - RewritePath=/travelItem/(?<segment>.+)\.do, /travelItem/${segment}
        - id: travelGroup
          uri: lb://guobin-core
          predicates:
              - Path=/travelGroup/*.do
          filters:
              - RewritePath=/travelGroup/(?<segment>.+)\.do, /travelGroup/${segment}
        - id: setmeal
          uri: lb://guobin-core
          predicates:
              - Path=/setmeal/*.do
          filters:
              - RewritePath=/setmeal/(?<segment>.+)\.do, /setmeal/${segment}
        - id: orderSetting
          uri: lb://guobin-core
          predicates:
              - Path=/orderSetting/*.do
          filters:
              - RewritePath=/orderSetting/(?<segment>.+)\.do, /orderSetting/${segment}
        - id: login
          uri: lb://guobin-member
          predicates:
              - Path=/login/*.do
          filters:
              - RewritePath=/login/(?<segment>.+)\.do, /login/${segment}
        - id: order
          uri: lb://guobin-member
          predicates:
              - Path=/order/*.do
          filters:
              - RewritePath=/order/(?<segment>.+)\.do, /order/${segment}
        - id: report
          uri: lb://guobin-member
          predicates:
              - Path=/report/*.do
          filters:
              - RewritePath=/report/(?<segment>.+)\.do, /report/${segment}
        - id: validateCode
          uri: lb://guobin-member
          predicates:
              - Path=/validateCode/*.do
          filters:
              - RewritePath=/validateCode/(?<segment>.+)\.do, /validateCode/${segment}
        - id: address
          uri: lb://guobin-map
          predicates:
              - Path=/address/*.do
          filters:
              - RewritePath=/address/(?<segment>.+)\.do, /address/${segment}




eureka:
  client:
    serviceUrl:
      defaultZone: http://localhost:8000/eureka/
  instance:
    prefer-ip-address: true

logging:
  level:
    root: INFO
    org.springframework.web: DEBUG
    org.springframework.cloud.netflix.zuul: DEBUG
    org.springframework.boot.actuate: DEBUG
    org.springframework.security: DEBUG
  pattern:
    console: "%clr(%d{${LOG_DATEFORMAT_PATTERN:HH:mm:ss.SSS}}){faint} %clr(${LOG_LEVEL_PATTERN:-%5p}) %clr(${PID:- }){magenta} %clr(---){faint} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m%n${LOG_EXCEPTION_CONVERSION_WORD:%wEx}"

